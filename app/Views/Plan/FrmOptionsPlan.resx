<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pcPausedPlan.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>